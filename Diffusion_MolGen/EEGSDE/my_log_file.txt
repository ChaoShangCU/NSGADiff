--- /dev/fd/63	2023-11-14 16:17:20.528981681 -0500
+++ /dev/fd/62	2023-11-14 16:17:20.528981681 -0500
@@ -1 +1 @@
-
+property_norms\['mean'\] = 21.00
--- /dev/fd/61	2023-11-14 16:17:20.536981671 -0500
+++ /dev/fd/60	2023-11-14 16:17:20.536981671 -0500
@@ -1 +1 @@
-valid_molecules_Cv_${self.cv_value}.txt
+valid_molecules_Cv_21.txt
Entropy of n_nodes: H[N] -2.4754221439361572
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
--- /dev/fd/63	2023-11-14 16:18:39.400870953 -0500
+++ /dev/fd/62	2023-11-14 16:18:39.400870953 -0500
@@ -1 +1 @@
-
+property_norms\['mean'\] = 22.00
--- /dev/fd/61	2023-11-14 16:18:39.400870953 -0500
+++ /dev/fd/60	2023-11-14 16:18:39.400870953 -0500
@@ -1 +1 @@
-valid_molecules_Cv_${self.cv_value}.txt
+valid_molecules_Cv_22.txt
--- /dev/fd/63	2023-11-14 16:18:40.564869338 -0500
+++ /dev/fd/62	2023-11-14 16:18:40.564869338 -0500
@@ -1 +1 @@
-
+property_norms\['mean'\] = 23.00
--- /dev/fd/61	2023-11-14 16:18:40.568869334 -0500
+++ /dev/fd/60	2023-11-14 16:18:40.568869334 -0500
@@ -1 +1 @@
-valid_molecules_Cv_${self.cv_value}.txt
+valid_molecules_Cv_23.txt
--- /dev/fd/63	2023-11-14 16:18:41.408868168 -0500
+++ /dev/fd/62	2023-11-14 16:18:41.408868168 -0500
@@ -1 +1 @@
-
+property_norms\['mean'\] = 24.00
--- /dev/fd/61	2023-11-14 16:18:41.412868164 -0500
+++ /dev/fd/60	2023-11-14 16:18:41.412868164 -0500
@@ -1 +1 @@
-valid_molecules_Cv_${self.cv_value}.txt
+valid_molecules_Cv_24.txt
--- /dev/fd/63	2023-11-14 16:18:42.152867137 -0500
+++ /dev/fd/62	2023-11-14 16:18:42.152867137 -0500
@@ -1 +1 @@
-
+property_norms\['mean'\] = 25.00
--- /dev/fd/61	2023-11-14 16:18:42.156867133 -0500
+++ /dev/fd/60	2023-11-14 16:18:42.156867133 -0500
@@ -1 +1 @@
-valid_molecules_Cv_${self.cv_value}.txt
+valid_molecules_Cv_25.txt
Original filename not found in rdkit_functions.py for iteration 21
Entropy of n_nodes: H[N] -2.4754221439361572
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Original filename not found in rdkit_functions.py for iteration 22
Original filename not found in rdkit_functions.py for iteration 23
Original filename not found in rdkit_functions.py for iteration 24
Original filename not found in rdkit_functions.py for iteration 25
Original filename not found in rdkit_functions.py for iteration 26
Original filename not found in rdkit_functions.py for iteration 27
Original filename not found in rdkit_functions.py for iteration 28
Original filename not found in rdkit_functions.py for iteration 29
Original filename not found in rdkit_functions.py for iteration 21
2023-11-14 16:26:07,529 - args_path:pretrained_models/cEDM_Cv/args.pickle
2023-11-14 16:26:07,530 - argse_path:pretrained_models/predict_Cv/args.pickle
2023-11-14 16:26:07,532 - Dataset exists and is processed.
2023-11-14 16:26:08,434 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 16:26:08,579 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 16:26:08,582 - Removing thermochemical energy from targets zpve U0 U H G Cv
/home/chao/EEGSDE/qm9/models.py:141: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
2023-11-14 16:26:10,255 - model_path:pretrained_models/cEDM_Cv/generative_model_ema.npy
2023-11-14 16:26:10,275 - energy_path:pretrained_models/predict_Cv/model_ema.npy
Entropy of n_nodes: H[N] -2.4754221439361572
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 150, in main_quantitative
    loss, stability_dict, rdkit_metrics = test(classifier, diffusion_dataloader, mean, mad, args.property, args.device, 1, dataset_info,args.result_path,args.save)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 132, in test
    for i, data in enumerate(loader):
  File "run_EEGSDE_single_property.py", line 120, in __next__
    return self.sample()
  File "run_EEGSDE_single_property.py", line 91, in sample
    context=context)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 108, in sample
    x, h = generative_model.sample(batch_size, max_n_nodes, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 540, in sample
    z = self.sample_p_zs_given_zt(s_array, t_array, z, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 478, in sample_p_zs_given_zt
    prediction = guidance.phi(zt, t, node_mask, edge_mask)
  File "/home/chao/EEGSDE/energys_prediction/en_diffusion.py", line 315, in phi
    net_out = self.dynamics._forward(t, x, node_mask, edge_mask)
  File "/home/chao/EEGSDE/energys_prediction/models.py", line 72, in _forward
    prediction = self.egnn(h, x, edges, node_mask=node_mask, edge_mask=edge_mask,n_nodes=n_nodes)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/chao/EEGSDE/energys_prediction/egnn.py", line 193, in forward
    h, _ = self._modules["e_block_%d" % i](h, x, edge_index, node_mask=node_mask, edge_mask=edge_mask, edge_attr=distances)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/chao/EEGSDE/energys_prediction/egnn.py", line 132, in forward
    distances, coord_diff = coord2diff(x, edge_index, self.norm_constant)
  File "/home/chao/EEGSDE/energys_prediction/egnn.py", line 254, in coord2diff
    coord_diff = x[row] - x[col]
KeyboardInterrupt
Original filename not found in rdkit_functions.py for iteration 22
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 3, in <module>
    from tool.utils import available_devices,format_devices
  File "/home/chao/EEGSDE/tool/utils.py", line 48, in <module>
    import torch
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/__init__.py", line 218, in <module>
    from torch._C import *  # noqa: F403
RuntimeError: KeyboardInterrupt: <EMPTY MESSAGE>
Original filename not found in rdkit_functions.py for iteration 21
2023-11-14 16:28:24,466 - args_path:pretrained_models/cEDM_Cv/args.pickle
2023-11-14 16:28:24,466 - argse_path:pretrained_models/predict_Cv/args.pickle
2023-11-14 16:28:24,468 - Dataset exists and is processed.
2023-11-14 16:28:25,188 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 16:28:25,505 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 16:28:25,508 - Removing thermochemical energy from targets zpve U0 U H G Cv
/home/chao/EEGSDE/qm9/models.py:141: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
2023-11-14 16:28:27,035 - model_path:pretrained_models/cEDM_Cv/generative_model_ema.npy
2023-11-14 16:28:27,056 - energy_path:pretrained_models/predict_Cv/model_ema.npy
Entropy of n_nodes: H[N] -2.4754221439361572
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 150, in main_quantitative
    loss, stability_dict, rdkit_metrics = test(classifier, diffusion_dataloader, mean, mad, args.property, args.device, 1, dataset_info,args.result_path,args.save)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 132, in test
    for i, data in enumerate(loader):
  File "run_EEGSDE_single_property.py", line 120, in __next__
    return self.sample()
  File "run_EEGSDE_single_property.py", line 91, in sample
    context=context)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 110, in sample
    assert_correctly_masked(x, node_mask)
  File "/home/chao/EEGSDE/util/utils.py", line 57, in assert_correctly_masked
    'Variables not masked properly.'
AssertionError: Variables not masked properly.
Original filename not found in rdkit_functions.py for iteration 22
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 131, in main_quantitative
    classifier = get_classifier(args.classifiers_path,args.args_classifiers_path).to(args.device)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/module.py", line 989, in to
    return self._apply(convert)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/module.py", line 641, in _apply
    module._apply(fn)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/module.py", line 664, in _apply
    param_applied = fn(param)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/module.py", line 987, in convert
    return t.to(device, dtype if t.is_floating_point() or t.is_complex() else None, non_blocking)
KeyboardInterrupt
Original filename not found in rdkit_functions.py for iteration 21
2023-11-14 16:43:00,516 - args_path:pretrained_models/cEDM_Cv/args.pickle
2023-11-14 16:43:00,517 - argse_path:pretrained_models/predict_Cv/args.pickle
2023-11-14 16:43:00,519 - Dataset exists and is processed.
2023-11-14 16:43:01,345 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 16:43:01,409 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 16:43:01,411 - Removing thermochemical energy from targets zpve U0 U H G Cv
/home/chao/EEGSDE/qm9/models.py:141: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
2023-11-14 16:43:03,167 - model_path:pretrained_models/cEDM_Cv/generative_model_ema.npy
2023-11-14 16:43:03,188 - energy_path:pretrained_models/predict_Cv/model_ema.npy
Entropy of n_nodes: H[N] -2.4754221439361572
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 150, in main_quantitative
    loss, stability_dict, rdkit_metrics = test(classifier, diffusion_dataloader, mean, mad, args.property, args.device, 1, dataset_info,args.result_path,args.save)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 132, in test
    for i, data in enumerate(loader):
  File "run_EEGSDE_single_property.py", line 120, in __next__
    return self.sample()
  File "run_EEGSDE_single_property.py", line 91, in sample
    context=context)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 110, in sample
    assert_correctly_masked(x, node_mask)
  File "/home/chao/EEGSDE/util/utils.py", line 57, in assert_correctly_masked
    'Variables not masked properly.'
AssertionError: Variables not masked properly.
Original filename not found in rdkit_functions.py for iteration 22
2023-11-14 16:44:11,417 - args_path:pretrained_models/cEDM_Cv/args.pickle
2023-11-14 16:44:11,418 - argse_path:pretrained_models/predict_Cv/args.pickle
2023-11-14 16:44:11,420 - Dataset exists and is processed.
2023-11-14 16:44:12,129 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 16:44:12,480 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 16:44:12,488 - Removing thermochemical energy from targets zpve U0 U H G Cv
/home/chao/EEGSDE/qm9/models.py:141: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
2023-11-14 16:44:14,387 - model_path:pretrained_models/cEDM_Cv/generative_model_ema.npy
2023-11-14 16:44:14,408 - energy_path:pretrained_models/predict_Cv/model_ema.npy
Entropy of n_nodes: H[N] -2.4754221439361572
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 150, in main_quantitative
    loss, stability_dict, rdkit_metrics = test(classifier, diffusion_dataloader, mean, mad, args.property, args.device, 1, dataset_info,args.result_path,args.save)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 132, in test
    for i, data in enumerate(loader):
  File "run_EEGSDE_single_property.py", line 120, in __next__
    return self.sample()
  File "run_EEGSDE_single_property.py", line 91, in sample
    context=context)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 108, in sample
    x, h = generative_model.sample(batch_size, max_n_nodes, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 540, in sample
    z = self.sample_p_zs_given_zt(s_array, t_array, z, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 478, in sample_p_zs_given_zt
    prediction = guidance.phi(zt, t, node_mask, edge_mask)
  File "/home/chao/EEGSDE/energys_prediction/en_diffusion.py", line 315, in phi
    net_out = self.dynamics._forward(t, x, node_mask, edge_mask)
  File "/home/chao/EEGSDE/energys_prediction/models.py", line 72, in _forward
    prediction = self.egnn(h, x, edges, node_mask=node_mask, edge_mask=edge_mask,n_nodes=n_nodes)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/chao/EEGSDE/energys_prediction/egnn.py", line 193, in forward
    h, _ = self._modules["e_block_%d" % i](h, x, edge_index, node_mask=node_mask, edge_mask=edge_mask, edge_attr=distances)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/chao/EEGSDE/energys_prediction/egnn.py", line 137, in forward
    h, _ = self._modules["gcl_%d" % i](h, edge_index, edge_attr=edge_attr, node_mask=node_mask, edge_mask=edge_mask)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/chao/EEGSDE/energys_prediction/egnn.py", line 61, in forward
    edge_feat, mij = self.edge_model(h[row], h[col], edge_attr, edge_mask)
  File "/home/chao/EEGSDE/energys_prediction/egnn.py", line 35, in edge_model
    mij = self.edge_mlp(out)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/modules/activation.py", line 395, in forward
    return F.silu(input, inplace=self.inplace)
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/nn/functional.py", line 2059, in silu
    return torch._C._nn.silu(input)
KeyboardInterrupt
Original filename not found in rdkit_functions.py for iteration 21
2023-11-14 16:45:15,840 - args_path:pretrained_models/cEDM_Cv/args.pickle
2023-11-14 16:45:15,840 - argse_path:pretrained_models/predict_Cv/args.pickle
2023-11-14 16:45:15,842 - Dataset exists and is processed.
2023-11-14 16:45:16,499 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 16:45:16,506 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 16:45:16,509 - Removing thermochemical energy from targets zpve U0 U H G Cv
/home/chao/EEGSDE/qm9/models.py:141: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
2023-11-14 16:45:18,118 - model_path:pretrained_models/cEDM_Cv/generative_model_ema.npy
2023-11-14 16:45:18,139 - energy_path:pretrained_models/predict_Cv/model_ema.npy
Entropy of n_nodes: H[N] -2.4754221439361572
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Warning: detected nan, resetting EGNN output to zero.
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 150, in main_quantitative
    loss, stability_dict, rdkit_metrics = test(classifier, diffusion_dataloader, mean, mad, args.property, args.device, 1, dataset_info,args.result_path,args.save)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 132, in test
    for i, data in enumerate(loader):
  File "run_EEGSDE_single_property.py", line 120, in __next__
    return self.sample()
  File "run_EEGSDE_single_property.py", line 91, in sample
    context=context)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 108, in sample
    x, h = generative_model.sample(batch_size, max_n_nodes, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 540, in sample
    z = self.sample_p_zs_given_zt(s_array, t_array, z, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 464, in sample_p_zs_given_zt
    eps_t = self.phi(zt, t, node_mask, edge_mask, context)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 319, in phi
    net_out = self.dynamics._forward(t, x, node_mask, edge_mask, context)
  File "/home/chao/EEGSDE/models_conditional/models.py", line 100, in _forward
    if torch.any(torch.isnan(vel)):
KeyboardInterrupt
Original code not found in rdkit_functions.py for iteration 21
2023-11-14 17:03:35,120 - args_path:pretrained_models/cEDM_Cv/args.pickle
2023-11-14 17:03:35,121 - argse_path:pretrained_models/predict_Cv/args.pickle
2023-11-14 17:03:35,123 - Dataset exists and is processed.
2023-11-14 17:03:35,853 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:03:35,859 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:03:35,861 - Removing thermochemical energy from targets zpve U0 U H G Cv
/home/chao/EEGSDE/qm9/models.py:141: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
2023-11-14 17:03:37,418 - model_path:pretrained_models/cEDM_Cv/generative_model_ema.npy
2023-11-14 17:03:37,439 - energy_path:pretrained_models/predict_Cv/model_ema.npy
Entropy of n_nodes: H[N] -2.4754221439361572
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 150, in main_quantitative
    loss, stability_dict, rdkit_metrics = test(classifier, diffusion_dataloader, mean, mad, args.property, args.device, 1, dataset_info,args.result_path,args.save)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 132, in test
    for i, data in enumerate(loader):
  File "run_EEGSDE_single_property.py", line 120, in __next__
    return self.sample()
  File "run_EEGSDE_single_property.py", line 91, in sample
    context=context)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 108, in sample
    x, h = generative_model.sample(batch_size, max_n_nodes, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 540, in sample
    z = self.sample_p_zs_given_zt(s_array, t_array, z, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 464, in sample_p_zs_given_zt
    eps_t = self.phi(zt, t, node_mask, edge_mask, context)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 319, in phi
    net_out = self.dynamics._forward(t, x, node_mask, edge_mask, context)
  File "/home/chao/EEGSDE/models_conditional/models.py", line 100, in _forward
    if torch.any(torch.isnan(vel)):
KeyboardInterrupt
Original code not found in rdkit_functions.py for iteration 21
2023-11-14 17:05:58,081 - args_path:pretrained_models/cEDM_Cv/args.pickle
2023-11-14 17:05:58,082 - argse_path:pretrained_models/predict_Cv/args.pickle
2023-11-14 17:05:58,084 - Dataset exists and is processed.
2023-11-14 17:05:58,813 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:05:58,892 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:05:58,895 - Removing thermochemical energy from targets zpve U0 U H G Cv
/home/chao/EEGSDE/qm9/models.py:141: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
2023-11-14 17:06:00,560 - model_path:pretrained_models/cEDM_Cv/generative_model_ema.npy
2023-11-14 17:06:00,581 - energy_path:pretrained_models/predict_Cv/model_ema.npy
2023-11-14 17:07:05,394 - generated samples:50/10000
2023-11-14 17:07:05,492 - Iteration 0 	 loss 0.8294
Entropy of n_nodes: H[N] -2.4754221439361572
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 150, in main_quantitative
    loss, stability_dict, rdkit_metrics = test(classifier, diffusion_dataloader, mean, mad, args.property, args.device, 1, dataset_info,args.result_path,args.save)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 132, in test
    for i, data in enumerate(loader):
  File "run_EEGSDE_single_property.py", line 120, in __next__
    return self.sample()
  File "run_EEGSDE_single_property.py", line 91, in sample
    context=context)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 108, in sample
    x, h = generative_model.sample(batch_size, max_n_nodes, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 540, in sample
    z = self.sample_p_zs_given_zt(s_array, t_array, z, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 464, in sample_p_zs_given_zt
    eps_t = self.phi(zt, t, node_mask, edge_mask, context)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 319, in phi
    net_out = self.dynamics._forward(t, x, node_mask, edge_mask, context)
  File "/home/chao/EEGSDE/models_conditional/models.py", line 100, in _forward
    if torch.any(torch.isnan(vel)):
KeyboardInterrupt
Original code not found in rdkit_functions.py for iteration 21
2023-11-14 17:19:48,459 - args_path:pretrained_models/cEDM_Cv/args.pickle
2023-11-14 17:19:48,459 - argse_path:pretrained_models/predict_Cv/args.pickle
2023-11-14 17:19:48,461 - Dataset exists and is processed.
2023-11-14 17:19:49,133 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:19:49,480 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:19:49,487 - Removing thermochemical energy from targets zpve U0 U H G Cv
/home/chao/EEGSDE/qm9/models.py:141: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
2023-11-14 17:19:51,941 - model_path:pretrained_models/cEDM_Cv/generative_model_ema.npy
2023-11-14 17:19:51,968 - energy_path:pretrained_models/predict_Cv/model_ema.npy
Entropy of n_nodes: H[N] -2.4754221439361572
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 150, in main_quantitative
    loss, stability_dict, rdkit_metrics = test(classifier, diffusion_dataloader, mean, mad, args.property, args.device, 1, dataset_info,args.result_path,args.save)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 132, in test
    for i, data in enumerate(loader):
  File "run_EEGSDE_single_property.py", line 120, in __next__
    return self.sample()
  File "run_EEGSDE_single_property.py", line 91, in sample
    context=context)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 108, in sample
    x, h = generative_model.sample(batch_size, max_n_nodes, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 540, in sample
    z = self.sample_p_zs_given_zt(s_array, t_array, z, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 464, in sample_p_zs_given_zt
    eps_t = self.phi(zt, t, node_mask, edge_mask, context)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 319, in phi
    net_out = self.dynamics._forward(t, x, node_mask, edge_mask, context)
  File "/home/chao/EEGSDE/models_conditional/models.py", line 100, in _forward
    if torch.any(torch.isnan(vel)):
KeyboardInterrupt
Original code not found in rdkit_functions.py for iteration 22
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 3, in <module>
    from tool.utils import available_devices,format_devices
  File "/home/chao/EEGSDE/tool/utils.py", line 48, in <module>
    import torch
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/__init__.py", line 218, in <module>
    from torch._C import *  # noqa: F403
RuntimeError: KeyboardInterrupt: <EMPTY MESSAGE>
Original code not found in rdkit_functions.py for iteration 23
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 3, in <module>
    from tool.utils import available_devices,format_devices
  File "/home/chao/EEGSDE/tool/utils.py", line 48, in <module>
    import torch
  File "/home/chao/.conda/envs/EEGSDE/lib/python3.7/site-packages/torch/__init__.py", line 218, in <module>
    from torch._C import *  # noqa: F403
RuntimeError: KeyboardInterrupt: <EMPTY MESSAGE>
Original code not found in rdkit_functions.py for iteration 24
2023-11-14 17:20:30,877 - args_path:pretrained_models/cEDM_Cv/args.pickle
2023-11-14 17:20:30,877 - argse_path:pretrained_models/predict_Cv/args.pickle
2023-11-14 17:20:30,879 - Dataset exists and is processed.
2023-11-14 17:20:31,595 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:20:31,725 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:20:31,728 - Removing thermochemical energy from targets zpve U0 U H G Cv
/home/chao/EEGSDE/qm9/models.py:141: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
Entropy of n_nodes: H[N] -2.4754221439361572
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 144, in main_quantitative
    args.device, args_gen,args_en, property_norms)
  File "run_EEGSDE_single_property.py", line 49, in get_generator
    model, guidance, nodes_dist, prop_dist = get_model(args_gen,args_en, device, dataset_info, dataloaders['train'])
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 26, in get_model
    prop_dist = DistributionProperty(dataloader_train, args.conditioning)
  File "/home/chao/EEGSDE/qm9/models.py", line 112, in __init__
    self.distributions[prop])
  File "/home/chao/EEGSDE/qm9/models.py", line 125, in _create_prob_dist
    probs, params = self._create_prob_given_nodes(values_filtered)
  File "/home/chao/EEGSDE/qm9/models.py", line 139, in _create_prob_given_nodes
    histogram[i] += 1
KeyboardInterrupt
Original code not found in rdkit_functions.py for iteration 25
2023-11-14 17:20:36,945 - args_path:pretrained_models/cEDM_Cv/args.pickle
2023-11-14 17:20:36,945 - argse_path:pretrained_models/predict_Cv/args.pickle
2023-11-14 17:20:36,947 - Dataset exists and is processed.
2023-11-14 17:20:37,708 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:20:37,816 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:20:37,818 - Removing thermochemical energy from targets zpve U0 U H G Cv
/home/chao/EEGSDE/qm9/models.py:141: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
Entropy of n_nodes: H[N] -2.4754221439361572
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 144, in main_quantitative
    args.device, args_gen,args_en, property_norms)
  File "run_EEGSDE_single_property.py", line 49, in get_generator
    model, guidance, nodes_dist, prop_dist = get_model(args_gen,args_en, device, dataset_info, dataloaders['train'])
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 26, in get_model
    prop_dist = DistributionProperty(dataloader_train, args.conditioning)
  File "/home/chao/EEGSDE/qm9/models.py", line 112, in __init__
    self.distributions[prop])
  File "/home/chao/EEGSDE/qm9/models.py", line 125, in _create_prob_dist
    probs, params = self._create_prob_given_nodes(values_filtered)
  File "/home/chao/EEGSDE/qm9/models.py", line 134, in _create_prob_given_nodes
    i = int((val - prop_min)/prop_range * n_bins)
KeyboardInterrupt
Original code not found in rdkit_functions.py for iteration 21
2023-11-14 17:36:14,489 - args_path:pretrained_models/cEDM_Cv/args.pickle
2023-11-14 17:36:14,489 - argse_path:pretrained_models/predict_Cv/args.pickle
2023-11-14 17:36:14,491 - Dataset exists and is processed.
2023-11-14 17:36:15,085 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:36:15,091 - Removing thermochemical energy from targets zpve U0 U H G Cv
2023-11-14 17:36:15,093 - Removing thermochemical energy from targets zpve U0 U H G Cv
/home/chao/EEGSDE/qm9/models.py:141: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  probs = Categorical(torch.tensor(probs))
2023-11-14 17:36:16,583 - model_path:pretrained_models/cEDM_Cv/generative_model_ema.npy
2023-11-14 17:36:16,603 - energy_path:pretrained_models/predict_Cv/model_ema.npy
Entropy of n_nodes: H[N] -2.4754221439361572
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
Traceback (most recent call last):
  File "run_EEGSDE_single_property.py", line 182, in <module>
    main_quantitative(args)
  File "run_EEGSDE_single_property.py", line 150, in main_quantitative
    loss, stability_dict, rdkit_metrics = test(classifier, diffusion_dataloader, mean, mad, args.property, args.device, 1, dataset_info,args.result_path,args.save)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 132, in test
    for i, data in enumerate(loader):
  File "run_EEGSDE_single_property.py", line 120, in __next__
    return self.sample()
  File "run_EEGSDE_single_property.py", line 91, in sample
    context=context)
  File "/home/chao/EEGSDE/energys_prediction/sampling.py", line 108, in sample
    x, h = generative_model.sample(batch_size, max_n_nodes, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 540, in sample
    z = self.sample_p_zs_given_zt(s_array, t_array, z, node_mask, edge_mask, context, fix_noise=fix_noise,guidance=guidance,l=l)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 464, in sample_p_zs_given_zt
    eps_t = self.phi(zt, t, node_mask, edge_mask, context)
  File "/home/chao/EEGSDE/models_conditional/en_diffusion.py", line 319, in phi
    net_out = self.dynamics._forward(t, x, node_mask, edge_mask, context)
  File "/home/chao/EEGSDE/models_conditional/models.py", line 100, in _forward
    if torch.any(torch.isnan(vel)):
KeyboardInterrupt
import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

import torch


def compute_mean_mad(dataloaders, properties, dataset_name):
    if dataset_name == 'qm9':
        return compute_mean_mad_from_dataloader(dataloaders['train'], properties)
    elif dataset_name == 'qm9_second_half' or dataset_name == 'qm9_second_half':
        return compute_mean_mad_from_dataloader(dataloaders['valid'], properties)
    else:
        raise Exception('Wrong dataset name')


def compute_mean_mad_from_dataloader(dataloader, properties):
    property_norms = {}
    for property_key in properties:
        values = dataloader.dataset.data[property_key]
        mean = torch.mean(values)
        ma = torch.abs(values - mean)
        mad = torch.mean(ma)
        property_norms[property_key] = {}
        property_norms[property_key]['mean'] 
        property_norms[property_key]['mad'] = 4.00
        
    return property_norms

edges_dic = {}
def get_adj_matrix(n_nodes, batch_size, device):
    if n_nodes in edges_dic:
        edges_dic_b = edges_dic[n_nodes]
        if batch_size in edges_dic_b:
            return edges_dic_b[batch_size]
        else:
            # get edges for a single sample
            rows, cols = [], []
            for batch_idx in range(batch_size):
                for i in range(n_nodes):
                    for j in range(n_nodes):
                        rows.append(i + batch_idx*n_nodes)
                        cols.append(j + batch_idx*n_nodes)

    else:
        edges_dic[n_nodes] = {}
        return get_adj_matrix(n_nodes, batch_size, device)


    edges = [torch.LongTensor(rows).to(device), torch.LongTensor(cols).to(device)]
    return edges

def preprocess_input(one_hot, charges, charge_power, charge_scale, device):
    charge_tensor = (charges.unsqueeze(-1) / charge_scale).pow(
        torch.arange(charge_power + 1., device=device, dtype=torch.float32))
    charge_tensor = charge_tensor.view(charges.shape + (1, charge_power + 1))
    atom_scalars = (one_hot.unsqueeze(-1) * charge_tensor).view(charges.shape[:2] + (-1,))
    return atom_scalars


def prepare_context(conditioning, minibatch, property_norms):
    batch_size, n_nodes, _ = minibatch['positions'].size()
    node_mask = minibatch['atom_mask'].unsqueeze(2)
    context_node_nf = 0
    context_list = []
    for key in conditioning:
        properties = minibatch[key]
        properties = (properties - property_norms[key]['mean']) / property_norms[key]['mad']
        if len(properties.size()) == 1:
            # Global feature.
            assert properties.size() == (batch_size,)
            reshaped = properties.view(batch_size, 1, 1).repeat(1, n_nodes, 1)
            context_list.append(reshaped)
            context_node_nf += 1
        elif len(properties.size()) == 2 or len(properties.size()) == 3:
            # Node feature.
            assert properties.size()[:2] == (batch_size, n_nodes)

            context_key = properties

            # Inflate if necessary.
            if len(properties.size()) == 2:
                context_key = context_key.unsqueeze(2)

            context_list.append(context_key)
            context_node_nf += context_key.size(2)
        else:
            raise ValueError('Invalid tensor size, more than 3 axes.')
    # Concatenate
    context = torch.cat(context_list, dim=2)
    # Mask disabled nodes!
    context = context * node_mask
    assert context.size(2) == context_node_nf
    return context

